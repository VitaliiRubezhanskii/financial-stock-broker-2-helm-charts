app:
  name: account
  namespace: kafka
  environment: dev
  owner: vitalii.rubezhanskii@gmail.com

image:
  repository: vitalii1992/account-service
  tag: 5.0

replicaCount: 2
imagePullPolicy: Always

service:
  type: LoadBalancer
  externalIP: 192.168.64.8

ports:
  - name: http
    value: 8080

resources:
  limits:
    cpu: 1000m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

liveness:
  initialDelaySeconds: 40
  port: "9235"
  path: /actuator/health/liveness
  failureThreshold: 3
  successThreshold: 1
  timeoutSeconds: 3
  periodSeconds: 5

readiness:
  initialDelaySeconds: 50
  port: "9235"
  path: /actuator/health/readiness
  failureThreshold: 3
  successThreshold: 1
  timeoutSeconds: 3
  periodSeconds: 5

envs:
  - name: SPRING_PROFILES_ACTIVE
    value: deployment

application:
  spring:
    cloud:
      kubernetes:
        discovery.all-namespaces: "true"

    datasource:
      url: "jdbc:postgresql://postgres-postgresql:5432/quotes_provider"
      password: "postgres"
      username: "postgres"
      driverClassName: "org.postgresql.Driver"
      hikari:
        connectionTimeOut: "2000"
        maximumPoolSize: "5"

    jpa:
      show-sql: "true"
      database-platform: "org.hibernate.dialect.PostgreSQLDialect"
      hibernate.ddl-auto: "update"
      properties:
        hibernate:
          dialect: "org.hibernate.dialect.PostgreSQLDialect"
          format_sql: "true"
          temp.use_jdbc_metadata_defaults: "false"
    security:
      oauth2:
        client:
          registration:
            keycloak-spring-gateway-client:
              provider: "my-keycloak-provider"
              scope: "openid"
              client-id: "spring-gateway-client"
              client-secret: "3RhEF8pqKTANrQ6BhfxaYVmcjTXsDK0u"
              authorization-grant-type: "authorization_code"
              redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
          provider:
            my-keycloak-provider:
              issuer-uri: "http://keycloak-http.kafka.svc.cluster.local/auth/realms/My-Realm"
              jwk-set-uri: "http://keycloak-http.kafka.svc.cluster.local/auth/realms/My-Realm/protocol/openid-connect/certs"
              authorization-uri: "http://keycloak-http.kafka.svc.cluster.local/auth/realms/My-Realm/protocol/openid-connect/auth"
        resourceserver:
          jwt:
            jwk-set-uri: "http://keycloak-http.kafka.svc.cluster.local/auth/realms/My-Realm/protocol/openid-connect/certs"

  security.basic.enabled: "false"
  server.port: "8080"
  management:
    health:
      probes.enabled: "true"
      livenessState:
        enabled: "true"
      readinessState:
        enabled: "true"
    server.port: "9235"
    security:
      enabled: "false"
    endpoints:
      web:
        exposure:
          include: "*"
      refresh:
        enabled: "true"
